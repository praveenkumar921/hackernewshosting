{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/hacker-news.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","hackerNewsService","sortScoreAssending","sortdateAssending","topStoriesId","JSON","parse","localStorage","getItem","articlesByID","fetchIds","topStories","subscribe","data","setItem","stringify","fetchArticalByIds","length","forEach","getArticlesByID","push","sort","a","b","score","time","value","assignCopy","Object","assign","filter","item","title","toLowerCase","indexOf","filterItem","sortByScore","sortByDate","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","HackerNewsService","http","get","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBY;;AAAqC;;AAAY;;;;;;AACjD;;AAAsC;;AAAc;;;;;;AAQpD;;AAAoC;;AAAY;;;;;;AAChD;;AAAqC;;AAAc;;;;;;AASzD;;AACE;;AACE;;AACE;;AAAM;;AAAc;;AACtB;;AACF;;AACF;;;;;;AAJO;;AAAA;;AACK;;AAAA;;;;;;AAIZ;;AACE;;AAA2C;;AAAa;;AAC1D;;;;QD5COC,Y;;;AAOX,4BAAmBC,iBAAnB,EAAyD;AAAA;;AAAtC,aAAAA,iBAAA,GAAAA,iBAAA;AAJZ,aAAAC,kBAAA,GAAqB,IAArB;AACA,aAAAC,iBAAA,GAAoB,IAApB;AAGqD;;;;mCAEjD;AACT;AACA,eAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApB;AACA,eAAKC,YAAL,GAAoBJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;AACA,eAAKE,QAAL;AACD,S,CAEH;;;;mCACiB;AAAA;;AACb,cAAI,CAAC,KAAKN,YAAV,EAAwB;AACtB,iBAAKH,iBAAL,CAAuBU,UAAvB,GAAoCC,SAApC,CAA8C,UAACC,IAAD,EAAe;AAC3D,mBAAI,CAACT,YAAL,GAAoBS,IAApB;AACAN,0BAAY,CAACO,OAAb,CAAqB,WAArB,EAAkCT,IAAI,CAACU,SAAL,CAAe,KAAI,CAACX,YAApB,CAAlC;;AACA,mBAAI,CAACY,iBAAL;AACD,aAJD;AAKD;AACF,S,CAEH;;;;4CAC0B;AAAA;;;;AACtB,cAAI,CAAC,KAAKP,YAAN,IAAsB,YAAKA,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEQ,MAAnB,MAA8B,CAAxD,EAA2D;AACzD,iBAAKR,YAAL,GAAoB,EAApB;;AACA,gBAAI,KAAKL,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBc,OAAlB,CAA0B,UAACnB,EAAD,EAAQ;AAChC,sBAAI,CAACE,iBAAL,CAAuBkB,eAAvB,CAAuCpB,EAAvC,EAA2Ca,SAA3C,CAAqD,UAACC,IAAD,EAAe;AAClE,wBAAI,CAACJ,YAAL,CAAkBW,IAAlB,CAAuBP,IAAvB;;AACAN,8BAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCT,IAAI,CAACU,SAAL,CAAe,MAAI,CAACN,YAApB,CAArC;AACA,wBAAI,CAACA,YAAL,sBAAwB,MAAI,CAACA,YAA7B;AACD,iBAJD;AAKD,eAND;AAOD;AACF;AACF,S,CAEH;;;;sCACoB;AAChB,cAAI,KAAKP,kBAAT,EAA6B;AAC3B,iBAAKO,YAAL,CAAkBY,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAArC;AAAA,aAAvB;AACD,WAFD,MAEO;AACL,iBAAKf,YAAL,CAAkBY,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAArC;AAAA,aAAvB;AACD;;AACD,eAAKtB,kBAAL,GAA0B,CAAC,KAAKA,kBAAhC;AACA,eAAKO,YAAL,sBAAwB,KAAKA,YAA7B;AACD,S,CAEH;;;;qCACmB;AACf,cAAI,KAAKN,iBAAT,EAA4B;AAC1B,iBAAKM,YAAL,CAAkBY,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAnC;AAAA,aAAvB;AACD,WAFD,MAEO;AACL,iBAAKhB,YAAL,CAAkBY,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAnC;AAAA,aAAvB;AACD;;AACD,eAAKtB,iBAAL,GAAyB,CAAC,KAAKA,iBAA/B;AACA,eAAKM,YAAL,sBAAwB,KAAKA,YAA7B;AACD,S,CAEH;;;;mCACoBiB,K,EAAK;AACrB,cAAI,CAACA,KAAL,EAAY;AACV,iBAAKC,UAAL;AACD;;AACD,eAAKlB,YAAL,GAAoBmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAlB,EAAoEsB,MAApE,CAClB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,OAAzB,CAAiCR,KAAK,CAACO,WAAN,EAAjC,IAAwD,CAAC,CAA7D;AAAA,WADc,CAApB;AAGD,S,CAEH;;;;qCACmB;AACf,eAAKxB,YAAL,GAAoBmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAlB,CAApB;AACD;;;;;;;uBA9EUR,Y,EAAY,uI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,krC;AAAA;AAAA;;;ACRzB;;AACE;;AACE;;AAA2B;;AAAW;;AACtC;;AAEE;;AACF;;AACA;;AACE;;AAEA;;AACE;;AACE;AAAA;;AAAA;;AAAA,mBAAS,IAAAmC,UAAA,WAAT;AAAkC,WAAlC;;AADF;;AAEA;;AACE;;AAAoB;;AAAM;;AAC5B;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA+B;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAC7B;;AACE;;AACA;;AACF;;AACA;;AAAkB;;AAAa;;AACjC;;AACF;;AACA;;AACE;;AAAgC;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AAC9B;;AACE;;AACA;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAOA;;AAGF;;AACF;;AACF;;;;AA/BsB;;AAAA;;AACA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAQW;;AAAA;;AACV;;AAAA;;AAOZ;;AAAA;;;;;;;;;sED1CErC,Y,EAAY;cALxB,uDAKwB;eALd;AACTsC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,sEAAD,C;AAAmB,gBARrB,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,0EALO,EAMP,sEANO,CAQqB;;;;0HAGnBA,S,EAAS;AAAA,uBAblB,2DAakB;AAbN,kBAGZ,uEAHY,EAIZ,qEAJY,EAKZ,oEALY,EAMZ,4FANY,EAOZ,0EAPY,EAQZ,sEARY;AAaM,O;AALH,K;;;;;sEAKNA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,0EALO,EAMP,sEANO,CAJD;AAYRC,mBAAS,EAAE,CAAC,sEAAD,CAZH;AAaRC,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;;;;;;;;;;;;;;;;ACzBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,iB;;;AAEX,iCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB,O,CAE3C;;;;;qCACsB;AAClB,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,oEAAd,CAAP;AACD,S,CAEH;;;;wCACyBjD,E,EAAY;AACjC,iBAAO,KAAKgD,IAAL,CAAUC,GAAV,CAAc,gDAAgDjD,EAAhD,GAAqD,oBAAnE,CAAP;AACD;;;;;;;uBAZU+C,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVG,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACN9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { HackerNewsService } from './hacker-news.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  public topStoriesId: any;\n  public articlesByID: any;\n  public sortScoreAssending = true;\n  public sortdateAssending = true;\n\n\n  constructor(public hackerNewsService: HackerNewsService) { }\n\n  ngOnInit() {\n    // To validate local storage data weather empty or not and store data from local storage.\n    this.topStoriesId = JSON.parse(localStorage.getItem('storiesId'));\n    this.articlesByID = JSON.parse(localStorage.getItem('articlesByID'));\n    this.fetchIds();\n  }\n\n// To fetch id's from remote with top stores api and store the data in local storage.\n  public fetchIds(): void {\n    if (!this.topStoriesId) {\n      this.hackerNewsService.topStories().subscribe((data: any) => {\n        this.topStoriesId = data;\n        localStorage.setItem('storiesId', JSON.stringify(this.topStoriesId));\n        this.fetchArticalByIds();\n      });\n    }\n  }\n\n// To fetch articales bases on id's fetched from top stores api and store data to local storage.\n  public fetchArticalByIds(): void {\n    if (!this.articlesByID || this.articlesByID?.length === 0) {\n      this.articlesByID = [];\n      if (this.topStoriesId) {\n        this.topStoriesId.forEach((id) => {\n          this.hackerNewsService.getArticlesByID(id).subscribe((data: any) => {\n            this.articlesByID.push(data);\n            localStorage.setItem('articlesByID', JSON.stringify(this.articlesByID));\n            this.articlesByID = [...this.articlesByID];\n          });\n        });\n      }\n    }\n  }\n\n// To sort the data based on score in ascending and descending order.\n  public sortByScore(): void {\n    if (this.sortScoreAssending) {\n      this.articlesByID.sort((a, b) => (a.score < b.score) ? 1 : -1);\n    } else {\n      this.articlesByID.sort((a, b) => (a.score > b.score) ? 1 : -1);\n    }\n    this.sortScoreAssending = !this.sortScoreAssending;\n    this.articlesByID = [...this.articlesByID];\n  }\n\n// To sort the data based on date and time in ascending and descending order.\n  public sortByDate(): void {\n    if (this.sortdateAssending) {\n      this.articlesByID.sort((a, b) => (a.time < b.time) ? 1 : -1);\n    } else {\n      this.articlesByID.sort((a, b) => (a.time > b.time) ? 1 : -1);\n    }\n    this.sortdateAssending = !this.sortdateAssending;\n    this.articlesByID = [...this.articlesByID];\n  }\n\n// To filter data based on user search.\n  public filterItem(value): void {\n    if (!value) {\n      this.assignCopy();\n    }\n    this.articlesByID = Object.assign([], JSON.parse(localStorage.getItem('articlesByID'))).filter(\n      item => item.title.toLowerCase().indexOf(value.toLowerCase()) > -1\n    );\n  }\n\n// assign the origanl data if nothing is searched.\n  public assignCopy(): void {\n    this.articlesByID = Object.assign([], JSON.parse(localStorage.getItem('articlesByID')));\n  }\n}\n","<div class=\"container-fluid\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <span class=\"navbar-brand\">Hacker News</span>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n      </ul>\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2 searchInput\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" #myInput\r\n          (input)=\"filterItem(myInput.value)\">\r\n        <span style=\"color: bisque;\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n  <div class=\"dataValue\">\r\n    <div class=\"sorting my-2\">\r\n      <div>\r\n        <span style=\"cursor: pointer;\" (click)=\"sortByScore()\" class=\"d-flex flex-row align-items-center sortIcon\">\r\n          <div>\r\n            <mat-icon *ngIf=\"sortScoreAssending\">arrow_upward</mat-icon>\r\n            <mat-icon *ngIf=\"!sortScoreAssending\">arrow_downward</mat-icon>\r\n          </div>\r\n          <div class=\"ml-1\">Sort by score</div>\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span style=\"cursor: pointer; \" (click)=\"sortByDate()\" class=\"d-flex flex-row align-items-center sortIcon\">\r\n          <div>\r\n            <mat-icon *ngIf=\"sortdateAssending\">arrow_upward</mat-icon>\r\n            <mat-icon *ngIf=\"!sortdateAssending\">arrow_downward</mat-icon>\r\n          </div>\r\n          <div class=\"ml-1\">\r\n            Sort by date and time\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <cdk-virtual-scroll-viewport [itemSize]=\"50\" class=\"viewport\">\r\n      <div class=\"m-3\" *cdkVirtualFor=\"let item of articlesByID\">\r\n        <div class=\"shadow p-2 mb-2 bg-white rounded\">\r\n          <a href=\"{{item.url}}\" target=\"_blank\">\r\n            <span>{{item.title}}</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"articlesByID?.length === 0\" class=\"d-flex flex-row justify-content-center\">\r\n        <h1 class=\"badge badge-secondary p-3 mt-5\">No item found</h1>\r\n      </div>\r\n    </cdk-virtual-scroll-viewport>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HackerNewsService } from './hacker-news.service';\nimport {MatIconModule} from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {CdkScrollableModule, ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    CdkScrollableModule,\n    ScrollingModule,\n  ],\n  providers: [HackerNewsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HackerNewsService {\n\n  constructor(private http: HttpClient) { }\n\n// To get top stories id's from remote\n  public topStories() {\n    return this.http.get('https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty');\n  }\n\n// To get stories based on id's from remote\n  public getArticlesByID(id: number) {\n    return this.http.get('https://hacker-news.firebaseio.com/v0/item/' + id + '.json?print=pretty');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}